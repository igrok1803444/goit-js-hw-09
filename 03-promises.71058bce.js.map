{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAEhCC,EAAa,EACbC,EAAO,EACPC,EAAS,EAcb,SAASC,EAAcC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQZ,EAAAkB,OAAOC,QAAQ,qBAAoCC,OAAfX,EAAS,QAAYW,OAANV,EAAM,QAGjEG,EAAOb,EAAAkB,OAAOG,QAAQ,oBAAmCD,OAAfX,EAAS,QAAYW,OAANV,EAAM,O,GAEhEA,E,IAvBPR,EAAKoB,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBACNnB,EAAaoB,OAAOvB,EAAKQ,MAAMgB,OAC/BpB,EAAOmB,OAAOvB,EAAKyB,KAAKD,OACxBnB,EAASkB,OAAOvB,EAAK0B,OAAOF,OAC5B,IAAK,IAAIG,EAAI,EAAGA,EAAItB,EAAQsB,IAC1BrB,EAAcqB,EAAGxB,GAEjBA,GAAcC,C","sources":["src/js/03-promises.js"],"sourcesContent":["//imports\nimport { Notify } from 'notiflix';\n//DOM navigation\nconst form = document.querySelector('.form');\n//variables\nlet firstDelay = 0;\nlet step = 0;\nlet amount = 0;\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  firstDelay = Number(form.delay.value);\n  step = Number(form.step.value);\n  amount = Number(form.amount.value);\n  for (let i = 0; i < amount; i++) {\n    createPromise(i, firstDelay);\n\n    firstDelay += step;\n  }\n});\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(Notify.success(`Fulfilled promise ${position} in ${delay}ms`));\n      } else {\n        // Reject\n        reject(Notify.failure(`Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Notify","success","concat","failure","addEventListener","event","preventDefault","Number","value","step","amount","i"],"version":3,"file":"03-promises.71058bce.js.map"}